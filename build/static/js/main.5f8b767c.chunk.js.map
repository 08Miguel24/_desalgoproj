{"version":3,"sources":["core/desalgo core/TaskElementsComp.jsx","core/desalgo core/DaysComp.jsx","core/desalgo core/MonthsComp.jsx","core/desalgo core/RadiosComp.jsx","core/desalgo core/ModalBoxComp.jsx","core/desalgo core/HomePage.jsx","core/desalgo core/TimelineComp.jsx","desalgoproj/App.js","serviceWorker.js","index.js"],"names":["TestComponent1","props","state","id","deleteTask","bind","handleIdChange","event","this","setState","target","value","preventDefault","handleDelete","jsx_tasks","map","data","index","task_name","est_days","date","Date","year","getFullYear","month","getMonth","day","getUTCDate","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","difficulty","key","className","type","aria-label","data-bs-toggle","data-bs-target","onClick","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","Component","DaysComp","days_comps","defaultValue","MonthsComp","month_comps","i","RadioComps","rad_comps","num","name","onChange","handleInputChange","checked","htmlFor","ModalBox","changeInput","in_att","getAttribute","in_val","aria-describedby","handleSubmit","Home","deadline","is_loading","handleGenerate","getCookie","fetch","then","response","ok","Error","statusText","json","console","log","temp","slice","catch","error","match","parseFloat","parseInt","cookieValue","document","cookie","cookies","split","length","trim","substring","decodeURIComponent","pressStateUpward","csrf_token","data_to_push","method","body","JSON","stringify","headers","fetchData","task_raw_id","style","width","input-data","role","disabled","React","Item","deadline_val","weight","util","items","present","getHours","min","present_utc","UTC","diff","capacity_days","capacity_ET","Math","trunc","toUTCString","capacity","CAP","sort","item_1","item_2","ratio","knapsack","entries","task","cur_wt","cur_vl","fraction","temp_wt","elapsed_time","push","getMaxVal","TimelineRows","task_raws","concat","first_elem","sec_elem","temp_date_1","createTasks","jsx_tlrows","datetime","time","Timeline","App","href","aria-controls","aria-expanded","to","path","Login","About","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5f8b767c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class TestComponent1 extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: 0\r\n        };\r\n        this.deleteTask = this.deleteTask.bind(this);\r\n        this.handleIdChange = this.handleIdChange.bind(this);\r\n    }\r\n\r\n    handleIdChange(event){\r\n        this.setState({id: event.target.value})\r\n    }\r\n\r\n    deleteTask(event){\r\n        event.preventDefault();\r\n        this.props.handleDelete(this.state['id']);\r\n    }\r\n\r\n    render(){\r\n        const data = this.props['data'];\r\n        \r\n        const jsx_tasks = data.map((data, index) => {\r\n            const id = data['id'];\r\n\r\n            const task_name = data['task_name'];\r\n            const est_days = data['est_days'];\r\n            \r\n            // creates date but not in right timezone\r\n            const date = new Date(data['deadline']);\r\n\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n            const day = date.getUTCDate();\r\n            const hour = date.getUTCHours();\r\n            const minute = date.getUTCMinutes();\r\n            const second = date.getUTCSeconds();\r\n            \r\n            const difficulty = data['difficulty'];\r\n            \r\n            return (\r\n                <li key={index} className=\"list-group-item\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                        <h5 className=\"mb-1\">{task_name}</h5>\r\n                        <small>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn-close\" \r\n                                aria-label=\"Close\" \r\n                                data-bs-toggle=\"modal\" \r\n                                data-bs-target=\"#deleteTaskModal\"\r\n                                onClick={this.handleIdChange} \r\n                                value={id}\r\n                            />\r\n                            <div className=\"modal fade\" id=\"deleteTaskModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                <div className=\"modal-dialog modal-dialog-centered\">\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modal-header\">\r\n                                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Are you sure you want to delete selected task?</h5>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                className=\"btn btn-outline-success\" \r\n                                                onClick={this.deleteTask} \r\n                                                data-bs-dismiss=\"modal\" \r\n                                                aria-label=\"Close\"\r\n                                            >\r\n                                                Yes\r\n                                            </button>\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                className=\"btn btn-outline-danger\" \r\n                                                data-bs-dismiss=\"modal\" \r\n                                                aria-label=\"Close\"\r\n                                            >\r\n                                                No\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </small>\r\n                    </div>\r\n                    <p className=\"mb-1\">{`estimated days to work on: ${est_days}`}</p>\r\n                    <p className=\"mb-1\">{`deadline: ${month}/${day}/${year} ${hour}:${minute}:${second}`}</p>\r\n                    <p className=\"mb-1\">{`difficulty: ${difficulty}`}</p>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ul className=\"list-group list-group-flush\">\r\n                {jsx_tasks}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function DaysComp(){\r\n    const days_comps = [\r\n            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \r\n            11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n            21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31\r\n    ].map((index) => {\r\n        return (\r\n            index === 1 ? \r\n            <option defaultValue key={index} value={index}>{index}</option> : \r\n            <option key={index} value={index}>{index}</option>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {days_comps}\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function MonthsComp(){\r\n    const month_comps = [\r\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n    ].map((month, i) => {\r\n        return (\r\n            month === \"Jan\" ? \r\n            <option defaultValue key={i} value={month}>{month}</option> : \r\n            <option key={i} value={month}>{month}</option>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {month_comps}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default function RadioComps(props){\r\n    const rad_comps = [1, 2, 3, 4, 5].map((num, i) => {\r\n        return (\r\n            num === 1 ? \r\n            <div key={i} className=\"form-check form-check-inline\">\r\n                <input\r\n                    name=\"difficulty\"\r\n                    className=\"form-check-input\" \r\n                    type=\"radio\"\r\n                    id=\"inlineRadio1\" \r\n                    value={num}\r\n                    onChange={props.handleInputChange}\r\n                    checked={props['difficulty'] == num}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">{num}</label>\r\n            </div> :\r\n            <div key={i} className=\"form-check form-check-inline\">\r\n                <input\r\n                    name=\"difficulty\"\r\n                    className=\"form-check-input\" \r\n                    type=\"radio\"\r\n                    id=\"inlineRadio1\" \r\n                    value={num}\r\n                    onChange={props.handleInputChange}\r\n                    checked={props['difficulty'] == num}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">{num}</label>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Difficulty</span>\r\n            <div className=\"form-check\">\r\n                {rad_comps}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\n// attachments\r\nimport DaysComp from './DaysComp';\r\nimport MonthsComp from './MonthsComp';\r\nimport RadioComps from './RadiosComp';\r\n\r\n\r\n\r\nexport default class ModalBox extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.changeInput = this.changeInput.bind(this);\r\n    }\r\n\r\n    changeInput(event){\r\n        const in_att = event.target.getAttribute('name');\r\n        const in_val = event.target.value;\r\n        this.props.handleInputChange(in_att, in_val)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    data-bs-toggle=\"modal\" \r\n                    data-bs-target=\"#exampleModal\"\r\n                >\r\n                    Enter Task\r\n                </button>\r\n    \r\n                {/* dialog box to show */}\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Enter Task</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n    \r\n                            <div className=\"modal-body\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Task name</span>\r\n                                    <input\r\n                                        name=\"task-name\"\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        aria-label=\"Sizing example input\" \r\n                                        aria-describedby=\"inputGroup-sizing-default\"\r\n                                        onChange={this.changeInput}\r\n                                        value={this.props['input-data']['task_name']}\r\n                                    />\r\n                                </div>\r\n    \r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Est. days to work on task</span>\r\n                                    <input\r\n                                        name=\"est-days\"\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        aria-label=\"Sizing example input\" \r\n                                        aria-describedby=\"inputGroup-sizing-default\"\r\n                                        onChange={this.changeInput}\r\n                                        value={this.props['input-data']['est_days']}\r\n                                    />\r\n                                </div>\r\n    \r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Deadline</span>\r\n                                    <select\r\n                                        name=\"month\"\r\n                                        className=\"form-select\" \r\n                                        aria-label=\"Default select example\" \r\n                                        onChange={this.changeInput} \r\n                                        value={this.props['input-data']['deadline']['month']}\r\n                                    >\r\n                                        <MonthsComp/>\r\n                                    </select>\r\n                                    <select\r\n                                        name=\"day\"\r\n                                        className=\"form-select\" \r\n                                        aria-label=\"Default select example\"\r\n                                        onChange={this.changeInput}\r\n                                        value={this.props['input-data']['deadline']['day']}\r\n                                    >\r\n                                        <DaysComp/>\r\n                                    </select>\r\n                                    <input\r\n                                        name=\"year\"\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        aria-label=\"Sizing example input\" \r\n                                        aria-describedby=\"inputGroup-sizing-default\"\r\n                                        onChange={this.changeInput}\r\n                                        value={this.props['input-data']['deadline']['year']}\r\n                                    />\r\n                                </div>\r\n    \r\n                                <div className=\"input-group mb-3\">\r\n                                    <RadioComps handleInputChange={this.changeInput} difficulty={this.props['input-data']['difficulty']}/>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"modal-footer\">\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-primary\"\r\n                                    data-bs-dismiss=\"modal\" \r\n                                    onClick={this.props.handleSubmit}\r\n                                >\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } \r\n}\r\n\r\n            ","import React from 'react';\r\n\r\n// test components\r\nimport TestComponent1 from './TaskElementsComp';\r\nimport ModalBox from './ModalBoxComp';\r\n\r\nexport default class Home extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            task_name: \"\",\r\n            est_days: 0.0,\r\n            deadline: {\r\n                month: \"Jan\",\r\n                day: 1,\r\n                year: 2021\r\n            },\r\n            difficulty: 1,\r\n            data: [],\r\n            is_loading: false\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleGenerate = this.handleGenerate.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.getCookie = this.getCookie.bind(this);\r\n    }\r\n\r\n    fetchData(){\r\n        // set new state of data and then clear state of \r\n        // input values\r\n        fetch('http://127.0.0.1:8000/index/getposttaskraw')\r\n        .then((response) => {\r\n            // check if response returns true to flag a successful response\r\n            if(!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            \r\n            // if no error is thrown convert the response to json format\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            console.log('fetching complete will set state');\r\n            const temp = data.slice();\r\n            this.setState({\r\n                task_name: \"\",\r\n                est_days: 0.0,\r\n                deadline: {\r\n                    month: \"Jan\",\r\n                    day: 1,\r\n                    year: 2021\r\n                },\r\n                difficulty: 1,\r\n                data: temp,\r\n            });\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state['data']);\r\n        console.log('update successful');\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({is_loading: true})\r\n        fetch('http://127.0.0.1:8000/index/getposttaskraw')\r\n        .then((response) => {\r\n            // check if response returns true to flag a successful response\r\n            if(!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            \r\n            // if no error is thrown convert the response to json format\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            // console.log(data);\r\n            console.log('fetching complete will set state');\r\n            const temp = data.slice();\r\n            this.setState({\r\n                data: temp,\r\n                is_loading: false\r\n            });\r\n        })\r\n        .catch((error) => console.log(error));\r\n        console.log('mounting successful');\r\n    }\r\n    \r\n    handleInputChange(in_att, in_val){\r\n        \r\n        // this expression will check if entered string contains\r\n        // any character besides numbers the match() method will return null\r\n        const est_days_exp = /^[0-9]+$/;\r\n        const year_exp = /^[0-9]+$/;\r\n\r\n        // if user enters a \r\n        if(in_att === 'task-name'){\r\n            this.setState({\r\n                task_name: in_val\r\n            });\r\n\r\n        }else if(in_att === 'est-days'){\r\n            // empty string is not allowed\r\n            // input with number and string is not allowed\r\n            this.setState({\r\n                est_days: in_val.match(est_days_exp) === null ? 0.0 : parseFloat(in_val)\r\n            });\r\n\r\n        }else if(in_att === 'month'){\r\n            this.setState({\r\n                deadline: {\r\n                    month: in_val,\r\n                    day: this.state['deadline']['day'],\r\n                    year: this.state['deadline']['year']\r\n                }\r\n            });\r\n\r\n        }else if(in_att === 'day'){\r\n            this.setState({\r\n                deadline: {\r\n                    month: this.state['deadline']['month'],\r\n                    day: in_val,\r\n                    year: this.state['deadline']['year']\r\n                }\r\n            });\r\n\r\n        }else if(in_att === 'year'){\r\n            this.setState({\r\n                deadline: {\r\n                    month: this.state['deadline']['month'],\r\n                    day: this.state['deadline']['day'],\r\n                    year: in_val.match(year_exp) === null ? 2021 : parseInt(in_val)\r\n                }\r\n            });\r\n\r\n        }else{\r\n            this.setState({\r\n                difficulty: in_val\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    getCookie(name){\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== ''){\r\n            const cookies = document.cookie.split(';');\r\n            for(let i = 0; i < cookies.length; i++){\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if(cookie.substring(0, name.length + 1) === (name + '=')){\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    handleGenerate(event){\r\n        event.preventDefault();\r\n        this.props.pressStateUpward(this.state['data']);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        const csrf_token = this.getCookie('csrftoken');\r\n\r\n        // this will add elements to the list\r\n        // use the state to create the task elemeent\r\n        const data_to_push = {\r\n            task_name: this.state['task_name'],\r\n            est_days: this.state['est_days'],\r\n            deadline: {\r\n                month: this.state['deadline']['month'],\r\n                day: this.state['deadline']['day'],\r\n                year: this.state['deadline']['year']\r\n            },\r\n            difficulty: this.state['difficulty']\r\n        };\r\n\r\n        // simultaneously post the submitted data to the backend\r\n        // so that model may be created for it and then put in the DB\r\n        fetch('http://127.0.0.1:8000/index/getposttaskraw', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data_to_push),\r\n            headers: {\r\n                'content-type': 'application/json; charset=UTF-8',\r\n                'X-CSRFToken': csrf_token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // check if response returns true to flag a successful response\r\n            if(!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            \r\n            // if no error is thrown convert the response to json format\r\n            return response.json();\r\n        })\r\n        .then((response) => console.log(response))\r\n        .then(() => this.fetchData())\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    handleDelete(task_raw_id){\r\n        const csrf_token = this.getCookie('csrftoken');\r\n        fetch(`http://127.0.0.1:8000/index/deletetaskraw/${task_raw_id}`, {\r\n            method: 'DELETE', \r\n            headers: {\r\n                'content-type': 'application/json; charset=UTF-8',\r\n                'X-CSRFToken': csrf_token\r\n            }\r\n        })\r\n        .then((response) => console.log(response.json))\r\n        .then(() => this.fetchData());\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"card\" style={{width: \"36rem\"}}>\r\n                    <div>\r\n                        <div className=\"col\">\r\n                            <div className=\"card-header\">\r\n                                Priority Task Scheduler\r\n                            </div>\r\n\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Username</h5>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Number of current tasks: {this.state['data'].length}</h6>\r\n                                <p className=\"card-text\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit modi mollitia, dolores distinctio numquam eaque fugiat quas voluptatem? Similique, nostrum aut? Quidem quos ipsa labore! Earum sunt sit tempora impedit?</p>\r\n                                \r\n                                {/* this will contain the modal box */}\r\n                                <ModalBox\r\n                                    handleInputChange={this.handleInputChange} \r\n                                    handleSubmit={this.handleSubmit} \r\n                                    input-data={this.state}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* div that will contain the submitted elements */}\r\n                        <div className=\"col\">\r\n                            {this.state['is_loading'] === true ? <div className=\"text-center\">\r\n                                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div> : <TestComponent1 data={this.state['data']} handleDelete={this.handleDelete}/>}\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"card-body\">\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-outline-primary\" \r\n                                    disabled={this.state['data'].length === 0} \r\n                                    onClick={this.handleGenerate} \r\n                                >\r\n                                    Generate Schedule\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass Item{\r\n    #_est_days;\r\n    #_deadline;\r\n    constructor(task_name, est_days, deadline, deadline_val, difficulty){\r\n        this.task_name = task_name;\r\n        this.#_est_days = est_days;\r\n        this.#_deadline = deadline;\r\n        this.deadline_val = deadline_val;\r\n        this.difficulty = difficulty;\r\n    }\r\n    \r\n    value(){\r\n        return this.#_est_days + this.deadline_val + this.difficulty;\r\n    }\r\n\r\n    weight(){\r\n        return this.#_est_days;\r\n    }\r\n\r\n    ratio(){\r\n        return this.value() / this.weight()\r\n    }\r\n\r\n    deadline(){\r\n        return this.#_deadline;\r\n    }\r\n\r\n    toString(){\r\n        return (\r\n            `task name: ${this.task_name}\\n\r\n            estimated days to work on task: ${this.#_est_days}\\n\r\n            deadline: ${this.#_deadline}\\n\r\n            deadline_val: ${this.deadline_val}\\n\r\n            difficulty: ${this.difficulty}`\r\n        );\r\n    }\r\n}\r\n\r\nconst createTasks = (task_raws) => {\r\n    // check if array of task_raws is empty \r\n\r\n    if(task_raws.length !== 0){\r\n        // sort the ff tasks in reverse, first\r\n\r\n        // problem: this shows ordered array\r\n        console.log(task_raws);\r\n        \r\n        const temp = [].concat(task_raws);\r\n\r\n        // problem: right after merely copying the array is now in reverse\r\n        // that is why negative is being logged in the sorting funciton\r\n        console.log(temp);\r\n        const sorted_tasks = temp.sort((first_elem, sec_elem) => {\r\n            const temp_date_1 = new Date(first_elem['deadline']);\r\n            const temp_date_2 = new Date(sec_elem['deadline']);\r\n\r\n            // this operation will make sure array is sorted in reverse\r\n            return temp_date_2 - temp_date_1;\r\n        });\r\n        \r\n        // create corresponding objects for each task\r\n        const items = sorted_tasks.map((task, index) => {\r\n            const deadline = new Date(task['deadline']);            \r\n            const temp_item = new Item(task['task_name'], task['est_days'], deadline, index, task['difficulty']);\r\n            return temp_item;\r\n        });\r\n\r\n        console.log(items);\r\n        return items;\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nconst getMaxVal = (items, capacity) => {\r\n    let CAP = capacity;\r\n    const temp = items.slice();\r\n    console.log(temp);\r\n\r\n    // sort array according to ratio of each task \r\n    // in desecending order\r\n    temp.sort((item_1, item_2) => item_1.ratio() > item_2.ratio() ? -1 : 1);\r\n    console.log(temp);\r\n\r\n    let total_value = 0;\r\n    let knapsack = [];\r\n    for(let [index, task] of temp.entries()){\r\n        console.log(index, task);\r\n\r\n        let cur_wt = task.weight();\r\n        let cur_vl = task.value();\r\n\r\n        // when capacity has still space then subtract the capacity\r\n        // with the item's corresponding weight\r\n        if((CAP - cur_wt) >= 0){\r\n            CAP = CAP - cur_wt;\r\n            total_value = total_value + cur_vl;\r\n            console.log(1);\r\n\r\n            const elapsed_time = `${Math.trunc((cur_wt * 86400) / 3600)}:${Math.trunc(((cur_wt * 86400) % 3600) / 60)}:${Math.trunc(((cur_wt * 86400) % 3600) % 60)}`;\r\n            // add the task to the knapsack and its weight, \r\n            knapsack.push([task, elapsed_time]);\r\n\r\n        }else{\r\n            let fraction = CAP / cur_wt;\r\n            total_value = total_value + (cur_vl * fraction);\r\n            console.log(0);\r\n\r\n            const temp_wt = cur_wt * fraction;\r\n            const elapsed_time = `${Math.trunc((temp_wt * 86400) / 3600)}:${Math.trunc(((temp_wt * 86400) % 3600) / 60)}:${Math.trunc(((temp_wt * 86400) % 3600) % 60)}`;\r\n            knapsack.push([task, elapsed_time]);\r\n            break;\r\n        }\r\n    }\r\n\r\n    console.log(knapsack);\r\n    return knapsack;\r\n}\r\n\r\nconst util = (items) => {\r\n    // should no items be present return an empty array\r\n    if(items.length !== 0){\r\n        // the problem here is that new Date/time now is wrong when\r\n        // UTC is extracted from each component of time y,m,d,h,m,s\r\n        const present = new Date();\r\n        const year = present.getFullYear();\r\n        const month = present.getMonth() + 1;\r\n        const day = present.getUTCDate();\r\n        const hour = present.getHours();\r\n        const min = present.getUTCMinutes();\r\n        \r\n        const present_utc = new Date(Date.UTC(year, month - 1, day, hour, min + 1, 0))\r\n\r\n        const deadline = items[items.length - 1].deadline();\r\n\r\n        const diff = deadline - present_utc;\r\n        const capacity_days = diff / 86400000;\r\n        const capacity_ET = `${Math.trunc((diff / 1000) / 3600)}:${Math.trunc(((diff / 1000) % 3600) / 60)}:${Math.trunc(((diff / 1000) % 3600) % 60)}`;\r\n        console.log(present_utc.toUTCString(), deadline.toUTCString(), diff, capacity_days, capacity_ET);\r\n\r\n        return getMaxVal(items, capacity_days);\r\n    }\r\n\r\n    // return empty array \r\n    return [];\r\n}\r\n\r\nfunction TimelineRows(props){\r\n    const items = createTasks(props['task_raws']);\r\n    const knapsack = util(items);\r\n\r\n    const jsx_tlrows = knapsack.length === 0 ? <h1>No schedule available</h1> : <div className=\"timeline\">\r\n        {knapsack.map((task, index) => {\r\n\r\n            const [day, temp_dt] = task[0].deadline().toUTCString().split(',');\r\n            const datetime = temp_dt.split(' ');\r\n            const date = datetime[1];\r\n            const month = datetime[2];\r\n            const year = datetime[3];\r\n            const time = datetime[4];\r\n\r\n            return (\r\n                <div key={index} className=\"timeline-row\">\r\n                    <div className=\"timeline-time\">{time}<small>{`${date} ${month} ${year} ${day}`}</small></div>\r\n                    <div className=\"timeline-dot fb-bg\"></div>\r\n                    <div className=\"timeline-content\">\r\n                        <i className=\"fa fa-map-marker\"></i>\r\n                        <h4>{task[0]['task_name']}</h4>\r\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur repudiandae temporibus at doloribus praesentium.</p>\r\n                        <div className=\"\">\r\n                            <p className=\"badge badge-light\">elapsed time to work on task: </p>\r\n                            <p className=\"badge badge-light\"><mark>{task[1]}</mark></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n\r\n    return (\r\n        <>\r\n            {jsx_tlrows}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default class Timeline extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                <TimelineRows task_raws={this.props['task_raws']}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { \r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n} from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport '../bootstrap-5.0.0-beta3-dist/css/bootstrap.min.css';\r\nimport '../bootstrap/css/overwrite.css'\r\nimport '../bootstrap/css/timeline.css'\r\n\r\n\r\nimport Home from '../core/desalgo core/HomePage';\r\nimport Timeline from '../core/desalgo core/TimelineComp';\r\n\r\n\r\n\r\nexport default class App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            task_raws: []\r\n        };\r\n        this.pressStateUpward = this.pressStateUpward.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('mounting successful');\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state['task_raws']);\r\n        console.log('update successful');\r\n    }\r\n\r\n    pressStateUpward(task_raws){\r\n        \r\n        this.setState({task_raws: task_raws.slice()});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Router>\r\n                <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-primary\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"navbar-brand\" href=\"Navbar\">Navbar</a>\r\n\r\n                        <button\r\n                            className=\"navbar-toggler\"\r\n                            type=\"button\" \r\n                            data-bs-toggle=\"collapse\" \r\n                            data-bs-target=\"#navbarNav\" \r\n                            aria-controls=\"navbarNav\" \r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\"\r\n                        >\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/about\" className=\"nav-link\">About</Link>                                    \r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/timeline\" className=\"nav-link\">Timeline</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </nav>\r\n\r\n                <Switch>\r\n                    <Route path=\"/timeline\">\r\n                        <Timeline task_raws={this.state['task_raws']}/>\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login/>\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home pressStateUpward={this.pressStateUpward}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction About(){\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>About</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Login(props){\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Login</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './desalgoproj/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}